1.安装docker前提条件
linux系统
Docker 要求 CentOS 系统的内核版本高于 3.10 
[root@localhost ~]# uname -r
3.10.0-957.el7.x86_64
=============================================================================
2.yum安装docker[如果有的可以删除]
[root@localhost ~]# sudo yum remove docker  docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine
3.安装依赖工具
[root@localhost ~]# sudo yum install -y yum-utils device-mapper-persistent-data lvm2
[root@localhost ~]# sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
=============================================================================
4.更新yum源
[root@localhost ~]# sudo yum makecache fast
=============================================================================
5.安装docker
[root@localhost ~]# sudo yum -y install docker-ce
=============================================================================
6.启动docker
[root@localhost ~]# sudo systemctl start docker
7.测试
=======================================================================================
基本操作:
	[root@localhost www]# docker --help  #查看docker帮助
	[root@localhost www]# docker info  	 #查看信息
	[root@localhost www]# docker images  #查看镜像
	[root@localhost www]# docker pull nginx
(2)启动容器，docker run -d -p 8080:80 nginx，把容器内的nginx的80端口，映射到当前服务器的8080端口，当前服务器的ip是192.168.1.120，浏览器输入http://192.168.1.120:8080/，就可以看到nginx已启动，
(3)再启动多一个容器，docker run -d -p 8081:80 nginx，浏览器输入http://192.168.1.120:8081/，就可以看到另外一个nginx已启动
也可以通过curl 127.0.0.1:8080 来测试是否打开相应端口
(4)到这里就能体现出Docker部署应用和传统部署应用的区别了，传统部署的话，需要人工拷贝多一份nginx，再配置端口，而Docker部署的话，在已制作好的镜像基础上，一条命令就可以部署一个新的应用
(5) docker inspect a219737ce905 通过命令找到容器端口，可以宿主机直接访问容器：http://172.17.0.2/:80

(1)docker ps -a 可以显示容器id
(2)docker stop 8dc6a2b6f903 停止容器
(3)docker rm 8dc6a2b6f903 删除容器
(4)docker ps 显示当前正在运行的容器
(5)docker exec -it myphpfpm /bin/bash  进入对应得docker容器

=======================================================================================
实战安装nginx
[root@localhost ~]# docker search nginx [查找]
docker下载nginx
下载镜像
[root@localhost ~]# docker pull nginx
调用一个容器来运行nginx的景象
[root@localhost ~]# docker run --name nginx_test -p 8081:80 -d nginx
查看是否运行
[root@localhost ~]# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
2995251e2516        nginx               "nginx -g 'daemon of…"   47 seconds ago      Up 44 seconds       0.0.0.0:8081->80/tcp   nginx_test
=======================================================================================
第一种方案:
部署nginx配置通过docker cp进行配置
[root@localhost nginx]# docker cp /nginx/conf/ 2995251e2516:/etc/nginx/nginx.conf 
=======================================================================================

第二种方案:
部署nginx
	[root@localhost conf]# docker run --name my_nginx -p 8080:80 -d -v /nginx/html:/usr/share/nginx/html  -v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf   nginx
=======================================================================================
							
部署PHP
[root@localhost ~]# docker search php #查找php
[root@localhost ~]# docker pull phpdockerio/php72-fpm  #下载php扩展
[root@localhost ~]# [root@localhost ~]# docker run -d -p 9000:9000  --name myphpfpm -v /nginx/html:/usr/share/nginx/html phpdockerio/php72-fpm  #启动php




php和nginx关联
关联容器:docker run  -p 8080:80 -d -v /nginx/html:/usr/share/nginx/html  -v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf --name my_nginx --link myphpfpm:phpfpm  nginx

修改nginx容器配置
location ~ \.php$ {
        root   /usr/share/nginx/html;#这块要改为映射地址
        fastcgi_pass   phpfpm:9000;#127.0.0.1修改为phpfpm
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html/$fastcgi_script_name;
        include        fastcgi_params;
    }
=======================================================================================================================================================================
安装mysql
[root@localhost ~]# docker search mysql
[root@localhost ~]# docker pull mysql
[root@localhost ~]# docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 --name my_mysql mysql
=======================================================================================================================================================================
php和mysql关联
docker run -d -p 9000:9000  --name myphpfpm -v /nginx/html:/usr/share/nginx/html --link my_mysql:mysql  phpdockerio/php72-fpm
php和nginx关联
docker run  -p 8080:80 -d -v /nginx/html:/usr/share/nginx/html  -v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf --name my_nginx --link myphpfpm:phpfpm  nginx



修改docker镜像源
https://www.jianshu.com/p/6172f03a24ff
docker bug解决
https://www.cnblogs.com/zhenyuyaodidiao/p/4691232.html
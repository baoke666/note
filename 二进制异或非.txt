
	php中int类型占用字节数：
		PHP_INT_SIZE	 8Byte 64bit
		PHP_INT_MAX		 9223372036854775807
		PHP_INT_MIN		-9223372036854775808
	
	原码
		正数原码：直接转换成二进制
		负数原码：取负数的绝对值，然后转成二进制，最高位补1
		
		 19  => 00000000 00000000 00000000 00000000 00000000 00000000 00000000 000010011
		-19  => 10000000 00000000 00000000 00000000 00000000 00000000 00000000 000010011
		
		 0 	 => 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
		-0 	 => 10000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	反码
		正数反码：等于原码
		负数反码：原码除符号位以外所有位取反
		19  => 00000000 00000000 00000000 00000000 00000000 00000000 00000000 000010011
		-19 => 11111111 11111111 11111111 11111111 11111111 11111111 11111111 111101100
		
		 0 	 => 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
		-0 	 => 11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111111
	
	补码
		正数补码：等于原码
		负数补码：原码除符号位所有位取反，最低位加1（反码 + 1）；
		19  => 00000000 00000000 00000000 00000000 00000000 00000000 00000000 000010011
		-19 => 11111111 11111111 11111111 11111111 11111111 11111111 11111111 111101101
		
		0 	 => 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
		-0 	 => 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000


二进制位（0和1）运算 
	PHP位运算符 http://www.php.net/manual/zh/language.operators.bitwise.php
	与 &
		0 & 0 = 0
		1 & 0 = 0
		1 & 1 = 1
	或 | 
		0 | 0 = 0
		1 | 0 = 1
		1 | 1 = 1
	非 ~
		~0 = 1
		~1 = 0
	异或 ^
		0 ^ 0 = 0
		1 ^ 1 = 0
		1 ^ 0 = 1
		
	左移 <<
	右移 >>	
	
		


接口安全	- 数据加密
	对称加密与非对称加密
	
	1 对称加密 symmetric encryption
	
		加密和解密使用相同密钥。通信双方提前协议好秘钥。
		
		工作过程：
			加密过程：数据	-》 加密	-》 密文
			解密过程：密文	-》 解密	-》 数据
		
		常用算法：
			AES（recommend）
			DES	
		
		加密方式：
			CBC（recommend）
			ECB

		
		
	2 非对称加密： asymmetric encryption
	
		公钥+私钥
			公钥加密的数据只有它相对应的私钥可以解开
			
		工作过程
			公钥加密 私钥解密
			私钥加密 公钥解密
		特点：算法强度复杂、安全性依赖于算法与密钥但是由于其算法复杂，而使得加密解密速度没有对称加密解密的速度快。
	
		
		常用算法：
			RSA
			D-H
			ECC	
			
			
		请求支付宝下单接口生成签名：
			使用应用私钥生成签名
		支付宝回调通知验签：
			使用支付宝公钥验签
	
	Linux命令：
	
		文件校验
			md5sum a.txt
			sha1sum a.txt
			sha256sum a.txt	
			
		openssl version
		openssl help
		
		openssl genrsa -out priv.key						//生成rsa私钥
		openssl rsa -in priv.key -pubout -out pub.pem		// 根据私钥生成公钥
		
		
作业：
	1 使用openssl工具生成 秘钥对（私钥和公钥）
	2 在客户端代码中使用私钥签名数据
	3 在服务端代码中使用公钥验证签名
		
	
	robust		稳健的
	commercial	商业的
	tookit		
	cryptography 	密码学
	contribution	贡献
	community	社区
	sidebar		侧边栏
	button		按钮
	license		许可证
	advisory	咨询的
	severity	严重程度
		
		
		
		
		
		
		